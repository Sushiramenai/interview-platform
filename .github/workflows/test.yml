name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint || echo "No lint script defined"
    
    - name: Run tests
      run: npm test || echo "No test script defined"
    
    - name: Check for security vulnerabilities
      run: npm audit --audit-level=moderate
    
    - name: Build project
      run: npm run build || echo "No build script defined"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  validate-env:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Check .env.example exists
      run: test -f .env.example
    
    - name: Validate .env.example format
      run: |
        echo "Checking .env.example for required variables..."
        grep -q "CLAUDE_API_KEY=" .env.example
        grep -q "GOOGLE_SERVICE_ACCOUNT_EMAIL=" .env.example
        grep -q "ADMIN_EMAIL=" .env.example
        echo "âœ“ All required environment variables documented"